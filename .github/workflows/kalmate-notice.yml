name: KALMATE Notice Watcher

on:
  schedule:
    # 10분마다 실행 (UTC 기준). 필요시 */30 등으로 변경
    - cron: "*/10 * * * *"
  workflow_dispatch: {}

permissions:
  contents: write   # 상태 파일(.kalmate_baseline_done, seen_posts.json) 커밋/푸시 권한

# 동시 실행 방지(커밋 충돌 예방)
concurrency:
  group: kalmate-notice
  cancel-in-progress: false

jobs:
  run-watcher:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          # 기본 브랜치가 main이 아닐 경우 아래 주석을 해제하고 맞는 브랜치로 지정
          # ref: main

      # (선택) 현재 파일/ignore 상태 확인용 디버그
      - name: Show working directory / .gitignore / files
        run: |
          pwd
          echo "---- .gitignore ----"
          [ -f .gitignore ] && cat .gitignore || echo "(no .gitignore)"
          echo "---- top level ----"
          ls -la
          echo "---- find python files ----"
          find . -maxdepth 3 -type f -name "*.py" -print

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Run watcher (auto-discover script path)
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
          # (옵션) 최초 스냅샷 표시 개수 조정: 기본 10
          # FIRST_RUN_TOP_N: "10"
          # (옵션) 최초 스냅샷 끄기: "false"
          # FIRST_RUN_NOTIFY: "true"
        run: |
          set -e
          SCRIPT_PATH=$(git ls-files | grep -E '^(.*/)?kalmate_notice_watcher_multi\.py$' | head -n1 || true)
          if [ -z "$SCRIPT_PATH" ]; then
            echo "❌ kalmate_notice_watcher_multi.py not found in repo. Check filename/location/branch."
            echo "Files in repo:"; ls -la
            exit 1
          fi
          echo "✅ Running: $SCRIPT_PATH"
          python "$SCRIPT_PATH"

      # ✅ 상태 파일 커밋/푸시 (신규 파일도 잡히도록 'git add -A' 먼저)
      - name: Commit & push state if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet --exit-code; then
            echo "No changes to commit."
          else
            git commit -m "chore: update state files [skip ci]"
            git push
          fi
